class Solution {
public:
    void f(vector<vector<int>>& g,int i,int j, vector<pair<int,int>>&a){
        if(i<0||j<0||i>=g.size()||j>=g[i].size()||g[i][j]==0)
            return;
        g[i][j]=0;
        a.push_back({i,j});
        f(g,i+1,j,a);
        f(g,i-1,j,a);
        f(g,i,j+1,a);
        f(g,i,j-1,a);
       return;
    }
    int shortestBridge(vector<vector<int>>& g) {
        vector<pair<int,int>>x;
        vector<pair<int,int>>y;
        int c=0;
        for(int i=0;i<g.size();i++){
            for(int j=0;j<g[i].size();j++){
                if(g[i][j]==1){
                    c++;
                    if(c==1){
                        f(g,i,j,x);
                    }else if(c==2)
                        f(g,i,j,y);
                }
            }
        }
        int m=INT_MAX;
        for(int i=0;i<x.size();i++){
            for(int j=0;j<y.size();j++){
                int d=abs(x[i].first-y[j].first)+abs(x[i].second-y[j].second);
                if(m>d)
                    m=d;
            }
        }
        return m;
    }
};
